DROP TABLE IF EXISTS `failed_jobs`;
CREATE TABLE failed_jobs (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, uuid VARCHAR(255) NOT NULL COLLATE BINARY, connection CLOB NOT NULL COLLATE BINARY, queue CLOB NOT NULL COLLATE BINARY, payload CLOB NOT NULL COLLATE BINARY, exception CLOB NOT NULL COLLATE BINARY, failed_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL);CREATE UNIQUE INDEX failed_jobs_uuid_unique ON failed_jobs (uuid);
LOCK TABLES `failed_jobs` WRITE;
ALTER TABLE `failed_jobs` DISABLE KEYS;
ALTER TABLE `failed_jobs` ENABLE KEYS;
UNLOCK TABLES;
DROP TABLE IF EXISTS `migrations`;
CREATE TABLE migrations (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, migration VARCHAR(255) NOT NULL COLLATE BINARY, batch INTEGER NOT NULL);
LOCK TABLES `migrations` WRITE;
ALTER TABLE `migrations` DISABLE KEYS;
INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES ('1', '2014_10_12_000000_testbench_create_users_table', '1');
INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES ('2', '2014_10_12_100000_testbench_create_password_resets_table', '1');
INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES ('3', '2019_08_19_000000_testbench_create_failed_jobs_table', '1');
ALTER TABLE `migrations` ENABLE KEYS;
UNLOCK TABLES;
DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE password_resets (email VARCHAR(255) NOT NULL COLLATE BINARY, token VARCHAR(255) NOT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL);CREATE INDEX password_resets_email_index ON password_resets (email);
LOCK TABLES `password_resets` WRITE;
ALTER TABLE `password_resets` DISABLE KEYS;
ALTER TABLE `password_resets` ENABLE KEYS;
UNLOCK TABLES;
